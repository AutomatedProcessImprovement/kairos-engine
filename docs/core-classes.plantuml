@startuml core-classes

class EventLog {
    id: int
    created_at: datetime
    updated_at: datetime
    file_name: str
    saved_name: str
    df_name: str
    definition: Definition
    cases: list[Case]
    events: list[Event]
}

class Definition {
    id: int
    created_at: datetime
    updated_at: datetime
    columns_definition: dict[str, str]
    outcome_definition: list[list[dict[str, datetime | int | str]]]
    treatment_definition: list[list[dict[str, datetime | int | str]]]
}

class Project {
    id: int
    created_at: datetime
    updated_at: datetime
    name: str
    description: str
    event_log: EventLog
}

class Case{
    id: int
    case_id: string
    status: string
    events: List[Event]
}

class Event{
    id: int
    date: datetime
    case_id: string
    activity: string
    attributes: dict
    case: Case
}

'class PreviousEventLog {
'}
'
'class CurrentEventLog {
'    events: List[Event]
'}
'
'class Algorithm {
'    id: int
'    name: string
'    description: string
'    parameters: dict
'    training_task: TrainingTask
'    model: Model
'}
'
'class TrainingTask {
'    id: int
'    date: datetime
'    status: string
'}
'
'class Model {
'    id: int
'    name: string
'    date: datetime
'    path: string
'}
'
'class PrescribingTask {
'    id: int
'    date: datetime
'    status: string
'    case_id: string
'    algorithm: Algorithm
'    result: Result
'}
'
'class Result {
'    id: int
'    date: datetime
'    case_id: string
'    output: string
'}

'EventLog <|-- PreviousEventLog
'EventLog <|-- CurrentEventLog
EventLog "1" -- "1" Definition
EventLog "1" -- "n" Case
EventLog "1" -- "n" Event
Case "1" -- "n" Event
Project "1" -- "1" EventLog
'Project "1" -- "1" CurrentEventLog
'CurrentEventLog "1" -- "n" Event
'Event "n" -- "1" Case
'Project "1" -- "n" Algorithm
'Project "1" -- "n" TrainingTask
'Case "1" -- "n" PrescribingTask
'Project "1" -- "n" PrescribingTask
'Algorithm "1" -- "1" TrainingTask
'TrainingTask "1" -- "1" Model
'Algorithm "1" -- "1" Model
'Algorithm "1" -- "n" PrescribingTask
'PrescribingTask "1" -- "1" Result
'Case "1" -- "n" Result

@enduml
